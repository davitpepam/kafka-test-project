version: '3.8'

services:
  angular-app:
    container_name: angular-container
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    networks:
      - frontend-network

  nestjs-app:
    container_name: nestjs-container
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - kafka
    networks:
      - backend-network

  mysql:
    container_name: mysql-container
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - backend-network
    volumes:
      - mysql-data:/var/lib/mysql

  zookeeper:
    container_name: zookeeper-container
    image: wurstmeister/zookeeper:latest
    restart: always
    ports:
      - "2181:2181"
    networks:
      - backend-network

  kafka:
    container_name: kafka-container
    image: wurstmeister/kafka:latest
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "user-topic:1:1"
    depends_on:
      - zookeeper
    networks:
      - backend-network

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
